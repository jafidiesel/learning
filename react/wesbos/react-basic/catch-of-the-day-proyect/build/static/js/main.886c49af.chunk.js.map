{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","ref","type","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvalible","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","clas","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","console","log","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","remove","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.886c49af.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component{\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n    }\n    \n    goToStore = (event) => {\n        // 1. stop the form from submitting\n        event.preventDefault();\n        // 2. get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. change the page to /store/input-value\n        this.props.history.push(`/store/${storeName}`);\n\n    };\n\n    render(){\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore} >\n                <h2>Please enter a store</h2>\n                <input ref={this.myInput}  type=\"text\" required placeholder=\"Store name\" defaultValue={getFunName()}/>\n                <button type=\"submit\">Visit store -></button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n    renderOrder = (key) =>{\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvalible = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout : { enter: 500, exit:500}\n        }\n        if(!fish) return null;\n        if(!isAvalible){\n           return( \n            <CSSTransition {...transitionOptions} >\n                <li key={key}>\n                    Sorry {fish ? fish.name : 'fish'} is no longer available\n                </li>\n            </CSSTransition>\n\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions} >\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{enter: 250, exit:250}} >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>        \n                        lbs {fish.name}\n\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li> \n            </CSSTransition>\n        )\n    };\n\n\n    render(){\n        const orderIds= Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal,key)=>{\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvalible = fish && fish.status === 'available';\n            if(isAvalible){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>order</h2>\n                <TransitionGroup  component=\"ul\" className=\"order\">\n                    { orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div clas=\"total\">\n                    Total: {formatPrice(total)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    static propTypes = {\n        addFish : PropTypes.func\n    }\n\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    \n    \n    createFish = (event) =>{\n        // 1. stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name : this.nameRef.current.value,\n            price : parseFloat(this.priceRef.current.value),\n            status : this.statusRef.current.value,\n            desc : this.descRef.current.value,\n            image : this.imageRef.current.value\n        }\n\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    }\n\n    render(){\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish} >\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"avalible\">Fresh!</option>\n                    <option value=\"unavalible\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\"> + Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        addFish : PropTypes.func\n    }\n\n    handleChange = event => {\n        // update the fish\n        // 1. copy of current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        // 2. update fish\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n\n    render(){\n        return (\n            <div className=\"fish-edit\">\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name}/>\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"avalible\">Fresh!</option>\n                    <option value=\"unavalible\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" onChange={this.handleChange} value={this.props.fish.desc}/>\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image}/>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\" >\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log in with Github</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log in with Twitter</button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log in with Facebook</button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAQnRPy_9OTpDExrcSm21lyucNzZpaFNmg\",\n    authDomain: \"cod-wesbos.firebaseapp.com\",\n    databaseURL: \"https://cod-wesbos.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        addFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        fishes: PropTypes.object\n    }\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged( user => {\n            if(user){\n                this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        console.log(authData);\n        // 1. look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this})\n        console.log(store);\n        // 2. claim if there is no owner\n        if(!store.owner){\n            await base.post(`${this.props.storeId}/owner`,{\n                data: authData.user.uid\n            })\n        }\n        // 3. set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    }\n\n    logout = async () => {\n        console.log('log out');\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render(){\n        const logout = <button onClick={this.logout}>Log out!</button>\n\n        // 1. check if they're login\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate}/>\n        }\n\n        // 2. check if they aren't the owner of the store\n        if(this.state.uid !== this.state.owner){\n            return <div>\n                <p>Sorry, you are not the owner!</p>\n                {logout}\n            </div>\n        }\n\n        // 3. they must be the owner\n        return (\n            <div className=\"inventory\">\n                <h2>inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                    <EditFishForm \n                        fish={this.props.fishes[key]} \n                        key={key} \n                        index={key} \n                        updateFish={this.props.updateFish} \n                    />)\n                }\n                <AddFishForm  addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes} >Load Sample Fishes</button>\n\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image : PropTypes.string,\n            name : PropTypes.string,\n            descstatus : PropTypes.string,\n        }),\n        addToOrder: PropTypes.func,\n    }\n    render(){\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvalible = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvalible} onClick={() => {this.props.addToOrder(this.props.index)}} > {isAvalible ? \"Add To Order\" : \"Sold Out!\"} </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    }\n    componentDidMount() {\n        const { params } = this.props.match;\n        const localStorageRef = localStorage.getItem(params.storeId)\n        if(localStorageRef){\n            this.setState({ order: JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n          context: this,\n          state: \"fishes\"\n        });\n      }\n\n    componentDidUpdate(){\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount(){\n        const { params } = this.props.match;\n        base.remove(`${params.storeId}/fishes`);\n        base.removeBinding(this.ref);\n    }\n\n\n\n    addFish = (fish) => {\n        // 1. take a copy of the existing state\n        const fishes = {...this.state.fishes};\n        // 2. add our new fish to that fishes variables\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. set the new fishes object to state\n        this.setState({\n            fishes: fishes\n        });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. take a copy of the current state\n        const fishes = {...this.state.fishes};\n        // 2. update that state\n        fishes[key] = updatedFish;\n        // 3. set that to state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes })\n    }\n\n    addToOrder = (key)=>{\n        // 1. take a copy of state\n        const order = {...this.state.order};\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order: order });\n    }\n\n    removeFromOrder = key => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({order})\n    }\n\n    render(){\n        return (\n            <div className=\"catch-of-the-day\" >\n                <div className=\"menu\">\n                    <Header tagline=\"fresh seafood market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key =>{\n                            return <Fish \n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder} />\n                        })}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h1>Not found page</h1>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route exact path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router/>,document.getElementById('main'))"],"sourceRoot":""}